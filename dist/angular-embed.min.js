!function(){"use strict";angular.module("angular-embed.config",[]).value("angular-embed.config",{debug:!0}),angular.module("noEmbed",["ngResource"]),angular.module("angular-embed.services",["angular-embedly","noEmbed"]),angular.module("angular-embed",["angular-embed.config","angular-embed.services"])}(),function(){"use strict";function e(){function e(e,n,r){function u(e,n){return e.some(function(e){return e.patterns.some(function(e){var r=new RegExp(e);return r.test(n)})})}var o=n.providers();return{get:function(t){function a(){e.embed(t).then(function(e){c.resolve(e.data)})}function i(){c.resolve(n.embed(t))}var c=r.defer();return o.then(function(e){u(e,t)?i():a()},function(){a()}),c.promise}}}this.$get=["embedlyService","noEmbedService","$q",e]}angular.module("angular-embed.services").provider("embedService",e)}(),function(){"use strict";function e(e){return{embed:function(n){var r=e("https://noembed.com/embed?callback=JSON_CALLBACK&url="+n,{},{get:{method:"JSONP"}});return r.get().$promise},providers:function(){var n=e("https://noembed.com/providers",{},{query:{method:"JSONP",isArray:!0,params:{callback:"JSON_CALLBACK"}}});return n.query().$promise}}}angular.module("noEmbed").service("noEmbedService",["$resource",e])}();