function embedService(e,r,n){function u(e,r){return e.some(function(e){return e.patterns.some(function(e){var n=new RegExp(e);return n.test(r)})})}var o=r.providers();return{get:function(a){function m(){e.embed(a).then(function(e){c.resolve(e.data)})}function t(){c.resolve(r.embed(a))}var c=n.defer();return o.then(function(e){u(e,a)?t():m()},function(){m()}),c.promise}}}function noEmbedService(e){return{embed:function(r){var n=e("https://noembed.com/embed?callback=JSON_CALLBACK&url="+r,{},{get:{method:"JSONP"}});return n.get().$promise},providers:function(){var r=e("https://noembed.com/providers",{},{query:{method:"JSONP",isArray:!0,params:{callback:"JSON_CALLBACK"}}});return r.query().$promise}}}!function(){"use strict";angular.module("angular-embed.config",[]).value("angular-embed.config",{debug:!0}),angular.module("noEmbed",["ngResource"]),angular.module("angular-embed.services",["angular-embedly","noEmbed"]),angular.module("angular-embed",["angular-embed.config","angular-embed.services"])}(),angular.module("angular-embed.services").service("embedService",["embedlyService","noEmbedService","$q",embedService]),angular.module("noEmbed").service("noEmbedService",["$resource",noEmbedService]);